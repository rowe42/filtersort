/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.admin.thebackend.service.gen.domain;

import java.io.Serializable;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.persistence.Column;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import javax.persistence.Embeddable;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Embedded;
import javax.persistence.OneToOne;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Field;
import de.muenchen.testproject.commons.domain.ObjectToStringBridge;
import de.muenchen.testproject.admin.thebackend.service.gen.domain.validation.ConsistentSecondLevelVo_;


/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by Barrakuda.
 */
/**
 * This class represents a SecondLevelVo_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@ConsistentSecondLevelVo_
@Embeddable
// Definition of getter, setter, ...
@NoArgsConstructor
@Getter
@Setter
@ToString
@EqualsAndHashCode
public class SecondLevelVo_ implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	// ========= //
	// Variables //
	// ========= //
	
	@Valid
	@Embedded
	@IndexedEmbedded
	@AttributeOverrides({
		@AttributeOverride(name="theThirdLevelText", column=@Column(name="thirdlevel_thethirdleveltext", nullable=false, length=30)),
		@AttributeOverride(name="theGender", column=@Column(name="thirdlevel_thegender", nullable=false))
	})	
	@NotNull
	private ThirdLevelVo_ thirdLevel;
	
	
	@Column(name="thesecondleveltext", nullable=false, length=30)
	@Field
	@FieldBridge(impl = ObjectToStringBridge.class)
	@NotNull
	@Size(min=2, max=30)
	private String theSecondLevelText;
	
	
}
