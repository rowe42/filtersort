/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.admin.thebackend.service.gen.domain;

import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.Table;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.search.annotations.Indexed;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;
import org.springframework.data.jpa.convert.threeten.Jsr310JpaConverters;
import javax.persistence.Convert;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Field;
import de.muenchen.testproject.commons.domain.BaseEntity;
import de.muenchen.testproject.commons.domain.ObjectToStringBridge;
import de.muenchen.testproject.commons.validator.Past;
import de.muenchen.testproject.admin.thebackend.service.gen.domain.validation.ConsistentDateEntity_;
import de.muenchen.testproject.admin.thebackend.service.services.persistence.DateEntity_PersistenceListener;


/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by Barrakuda.
 */
/**
 * This class represents a DateEntity_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@Entity
@EntityListeners(value = DateEntity_PersistenceListener.class)
@Indexed
@Table(name = "dateentity")
@ConsistentDateEntity_
// Definition of getter, setter, ...
@NoArgsConstructor
@Getter
@Setter
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
public class DateEntity_ extends BaseEntity  {
	
	// ========= //
	// Variables //
	// ========= //
	
	@Column(name="thedate", nullable=false)
	@Field
	@FieldBridge(impl = ObjectToStringBridge.class)
	@JsonDeserialize(using = LocalDateDeserializer.class)
	@JsonSerialize(using = LocalDateSerializer.class)
	@Convert(converter = Jsr310JpaConverters.LocalDateConverter.class)
	@NotNull
	@Past
	private java.time.LocalDate theDate;
	
	
	@Column(name="thedatetime", nullable=false)
	@Field
	@FieldBridge(impl = ObjectToStringBridge.class)
	@JsonDeserialize(using = LocalDateTimeDeserializer.class)
	@JsonSerialize(using = LocalDateTimeSerializer.class)
	@Convert(converter = Jsr310JpaConverters.LocalDateTimeConverter.class)
	@NotNull
	private java.time.LocalDateTime theDateTime;
	
	
	@Column(name="thetime")
	@Field
	@FieldBridge(impl = ObjectToStringBridge.class)
	@JsonDeserialize(using = LocalTimeDeserializer.class)
	@JsonSerialize(using = LocalTimeSerializer.class)
	@Convert(converter = Jsr310JpaConverters.LocalTimeConverter.class)
	private java.time.LocalTime theTime;
	
	
}
