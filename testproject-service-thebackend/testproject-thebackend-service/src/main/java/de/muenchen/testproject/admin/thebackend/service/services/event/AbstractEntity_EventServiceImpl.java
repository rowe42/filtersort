/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.admin.thebackend.service.services.event;

import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import de.muenchen.testproject.admin.thebackend.service.gen.domain.AbstractEntity_;
import de.muenchen.testproject.admin.thebackend.service.gen.services.event.AbstractEntity_EventService;

/*
 * This file will NOT be overwritten by Barrakuda.
 * This file was automatically generated by Barrakuda.
 */
/**
 * Provides methods to implement logic before and after Events.
 * If used as generated by Barrakuda this service will be autowired and called by AbstractEntity_EventListener.
 */
@Service
public class AbstractEntity_EventServiceImpl implements AbstractEntity_EventService {
	
	private static final Logger LOG = LoggerFactory.getLogger(AbstractEntity_EventServiceImpl.class);
	
	// If you need access to the database you can autowire a Repository.
	// Repositories are generated into the package: .gen.rest
	//
	// @Autowired
	// private <EntityName>Repository repo;
	
	@Override
	public void onAfterCreate(AbstractEntity_ entity) {
		// Add your logic here.
	}
	@Override
	public void onBeforeCreate(AbstractEntity_ entity) {
		// Add your logic here.
	}
	@Override
	public void onBeforeSave(AbstractEntity_ entity) {
		// Add your logic here.
	}
	@Override
	public void onAfterSave(AbstractEntity_ entity) {
		// Add your logic here.
	}
	@Override
	public void onBeforeLinkSave(AbstractEntity_ parent, Object linked) {
		// Add your logic here.
	}
	@Override
	public void onAfterLinkSave(AbstractEntity_ parent, Object linked) {
		// Add your logic here.
	}
	@Override
	public void onBeforeLinkDelete(AbstractEntity_ parent, Object linked) {
		// Add your logic here.
	}
	@Override
	public void onBeforeDelete(AbstractEntity_ entity) {
		// Add your logic here.
	}
	@Override
	public void onAfterDelete(AbstractEntity_ entity) {
		// Add your logic here.
	}
	@Override
	public void onAfterLinkDelete(AbstractEntity_ parent, Object linked) {
		// Add your logic here.
	}
}
