/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.admin.thebackend.service.gen.domain;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.Table;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import javax.persistence.DiscriminatorValue;
import org.hibernate.search.annotations.Indexed;
import de.muenchen.testproject.commons.auditing.MUCAudited;
import de.muenchen.testproject.admin.thebackend.service.gen.domain.validation.ConsistentSecondLevelEntity_;
import de.muenchen.testproject.admin.thebackend.service.services.persistence.SecondLevelEntity_PersistenceListener;


/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by Barrakuda.
 */
/**
 * This class represents a SecondLevelEntity_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@Entity
@EntityListeners(value = SecondLevelEntity_PersistenceListener.class)
@Indexed
@Table(name = "secondlevelentity")
@ConsistentSecondLevelEntity_
@MUCAudited({MUCAudited.ALL})
// Inheritance
@DiscriminatorValue(SecondLevelEntity_.DTYPE)
// Definition of getter, setter, ...
@NoArgsConstructor
@Getter
@Setter
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
public class SecondLevelEntity_ extends FirstLevelEntity_  {
	
	/**
	 * The concrete dtype for this entity within an inheritance hierarchy.
	 */
	public static final String DTYPE = "SecondLevelEntity_";
	
	// ========= //
	// Variables //
	// ========= //
	
	@Column(name="text3", length=30)
	@NotNull
	@Size(min=2, max=30)
	private String text3;
	
	
}
