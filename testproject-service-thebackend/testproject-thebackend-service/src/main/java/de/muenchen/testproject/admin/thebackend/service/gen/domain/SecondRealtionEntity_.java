/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.admin.thebackend.service.gen.domain;

import javax.validation.constraints.NotNull;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.Table;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import javax.persistence.ManyToOne;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OrderColumn;
import javax.persistence.OneToOne;
import javax.persistence.OneToMany;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.validator.constraints.Email;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Field;
import de.muenchen.testproject.commons.domain.BaseEntity;
import de.muenchen.testproject.commons.domain.ObjectToStringBridge;
import de.muenchen.testproject.admin.thebackend.service.gen.domain.validation.ConsistentSecondRealtionEntity_;
import de.muenchen.testproject.admin.thebackend.service.services.persistence.SecondRealtionEntity_PersistenceListener;


/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by Barrakuda.
 */
/**
 * This class represents a SecondRealtionEntity_.
 * <p>
 * Only oid and reference will be stored in the database.
 * The entity's content will be loaded according to the reference variable.
 * </p>
 */
@Entity
@EntityListeners(value = SecondRealtionEntity_PersistenceListener.class)
@Indexed
@Table(name = "secondrealtionentity")
@ConsistentSecondRealtionEntity_
// Definition of getter, setter, ...
@NoArgsConstructor
@Getter
@Setter
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true, exclude = {"inverseSecondRelationMtm", "inverseSecondRelationMto", "inverseSecondRelationOtm", "inverseSecondRelationOto"})
public class SecondRealtionEntity_ extends BaseEntity  {
	
	// ========= //
	// Variables //
	// ========= //
	
	@Column(name="theentitytext", nullable=false, length=254)
	@Field
	@FieldBridge(impl = ObjectToStringBridge.class)
	@NotNull
	@Email
	private String theEntityText;
	
	// ======================== //
	// Inverse entity relations //
	// =========================//
	
	@ManyToOne
	@JoinColumn(name = "fk_secondrelationotm_oid", insertable = false, updatable = false)
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "oid")
	private TheBigEntity_ inverseSecondRelationOtm;
	
	@ManyToMany(mappedBy = "secondRelationMtm")
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "oid")
	private java.util.Set<TheBigEntity_> inverseSecondRelationMtm = new java.util.HashSet<>();
	
	@OneToOne(mappedBy = "secondRelationOto")
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "oid")
	private TheBigEntity_ inverseSecondRelationOto;
	
	@OneToMany(mappedBy = "secondRelationMto")
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "oid")
	private java.util.Set<TheBigEntity_> inverseSecondRelationMto = new java.util.HashSet<>();
	
	
}
