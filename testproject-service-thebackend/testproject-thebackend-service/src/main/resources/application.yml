# Service Info
spring:
  profiles:
    active: local

  #i18n
  messages:
      basename: message
      cache-seconds: -1
      encoding: UTF-8

  # Spring data rest
  data.rest:
      return-body-on-update : true
      return-body-on-create : true

info.url: http://localhost:${service.port}/
service:
    info:
        oid: TESTPROJECT-THEBACKEND
        name: Thebackend
        version: v0.0.1-SNAPSHOT
    configuration:
        maxSearchResults: 50

logging.level.org.springframework.cloud.netflix.config : 'OFF'
logging.level.com.netflix.discovery : 'OFF'

#Wiremock
URL : http://localhost:8089/

#Define caching provider or deactivate caching globally
# E.g.: Global deactivation
# spring.cache.type: none

#Version GuavaCache (deprecated)
spring.cache.guava.spec: maximumSize=500,expireAfterAccess=420s

#Version CaffeineCache
#spring.cache.cache-names: KEEPER_CACHE, ENCLOSURE_CACHE, ANIMAL_CACHE, permissionsCache
#spring.cache.caffeine.spec: maximumSize=500,expireAfterAccess=420s

#Properties for activation or deactivation of caching in the respective repository
theBigEntity.repository.cache.active: false
firstRealtionEntity.repository.cache.active: false
secondRealtionEntity.repository.cache.active: false
dateEntity.repository.cache.active: false
customEntity.repository.cache.active: false
fall.repository.cache.active: false
abstractEntity.repository.cache.active: false
firstLevelEntity.repository.cache.active: false
secondLevelEntity.repository.cache.active: false
firstLevelCyclicEntity.repository.cache.active: false
secondLevelCyclicEntity.repository.cache.active: false

---
# LOCAL CONFIGURATION
spring:
    profiles: local
    h2.console.enabled: true
server:
    port: 39146
    ssl:
       keyAlias: selfsigned_localhost_sslserver
       key-store-password: changeit
       key-store: classpath:localhost.jks
       key-store-provider: SUN
       keyStoreType: JKS


security:
  basic:
    enabled: false
  oauth2:
    entitlements:
      entitlementsUri: http://localhost:8080/auth/realms/demo/authz/entitlement/openIdDemo   
    permissions:
      permissionsUri: http://localhost:8870/permissions
    resource:
      filter-order: 3
      jwt:
        key-value: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr1aJe3anRtLHLbJJ/z+FI3p6uJbypBM5llSJ41cv0s5X2gDjO/EsEmngDf8Ypo4gTdTwwWTLoTgJWK1KVveiX5TUIxiEbpjaVAiKzc3IXNMrq+6DMcyrDiyVjAsWkleAAmQJJwnsp7vv0/1IRIdj6t3r4+CUQOp3PiBPojRh7QGZxuU0MbsgwBKAW1AUyM17F2knovpshi9crwzwf47p3xa6uGJYHx+iAV7ritgC6QYWwg92PT2nXMUQbo+VllRb/gwvWdrIuybKUBlXZ59/M2greCudYjGhn0g5l236ADZYvGfxl8lk+x1ZHhX6Rp5IAWM8rrCjEoVdP2PUXPIadQIDAQAB
    client:
      client-id: openIdDemo


---
spring:
    profiles: Coding

---
spring:
    profiles: Konsolidierung

---
spring:
    profiles: Produktion

---
spring:
    profiles: Coding,Konsolidierung,Produktion

---
# NO-SECURITY CONFIGURATION
spring:
    profiles: no-security
    h2.console.enabled: true

security:
    ignored: /**
    permissions:
      permissionsUri: http://localhost:8870/permissions
---
# OPENSHIFT CONFIGURATION
spring:
    profiles: openshift
server.port: 8080

security:
  basic:
    enabled: false
  oauth2:
    entitlements:
      entitlementsUri: https://ssodev.muenchen.de/auth/realms/demo/authz/entitlement/openIdDemo   
    permissions:
      permissionsUri: http://user-service:8080/permissions
    resource:
      filter-order: 3
      jwt:
        key-value: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5YUs1ITW6qEbxlc93i0BAWYfhdpH94WcGlYS8ayzoKJA8G3QN4JiAn4Wp4VwCuUkf3bh3Y1YdFqlN42Rz5DeTi86Wilhle2fJthboBneGiaQZvszdGz8wMNcdqDC45dTLunJ5PnesVoMK6OQ/osk+7t/04QsMSJZtD+QodaKtj2a1KyUXBlX0yclG6R+XrzP2BSh4ixuiwwnFu8tffqOOmNMmtiNj4nS20S0P82QLXVhjy4NgP4UHXpLGtD1pJFQRO2MXh+N7NEVZrF76fIXTtmqGq0I/Ko87vjGxTEDcZNC/oWFRLkiEVtB+eSYM+NeB4vMhgIygbqt+4+YlQf0hQIDAQAB
    client:
      client-id: openIdDemo
