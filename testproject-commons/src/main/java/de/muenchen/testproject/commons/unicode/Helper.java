/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.commons.unicode;

import java.text.Normalizer;
import java.util.HashMap;
import java.util.Map;


/*
 * This file will NOT be overwritten by Barrakuda.
 * This file was automatically generated by Barrakuda.
 */
/**
 * <p>Hilfsklasse f√ºr das NFC-Normalisieren</p>
 * 
 * @see java.text.Normalizer
 */
class Helper {

	/**
	 * Konverieren eines String in die kanonische Unicode-Normalform (NFC)
	 * 
	 * @param in
	 * 		Eingabe-String
	 * @return
	 * 		Normalisierter String.
	 * 
	 * @see java.text.Normalizer#normalize(CharSequence, java.text.Normalizer.Form)
	 */
	public static String nfc(final String in) {
		if (in == null)
			return null;
		
		return Normalizer.normalize(in, Normalizer.Form.NFC);
	}

	/**
	 * Konverieren eines StringBuffers-Inhalts in die kanonische Unicode-Normalform (NFC)
	 * 
	 * @param in
	 * 		Eingabe
	 * @return
	 * 		Normalisierter Inhalt.
	 * 
	 * @see #nfc(String)
	 * @see java.text.Normalizer#normalize(CharSequence, java.text.Normalizer.Form)
	 */
	public static StringBuffer nfc(final StringBuffer in) {
		return new StringBuffer(nfc(in.toString()));
	}

	/**
	 * Konverieren eines Arrays von Strings in die kanonische Unicode-Normalform (NFC)
	 * 
	 * @param original
	 * 		Eingabe-Array
	 * @return
	 * 		Array mit normalisierten Inhalt.
	 * 
	 * @see #nfc(String)
	 * @see java.text.Normalizer#normalize(CharSequence, java.text.Normalizer.Form)
	 */
	public static String[] nfc(final String[] original) {
		final String[] converted = new String[original.length];
		for (int i = 0; i < original.length; i++) {
			converted[i] = nfc(original[i]);
		}
		return converted;
	}

	/**
	 * Konverieren einer Map von Strings in die kanonische Unicode-Normalform (NFC).
	 * 
	 * @param original
	 * 		Eingabe-Map
	 * @return
	 * 		Map mit normalisierten Inhalt.
	 * 
	 * @see #nfc(String)
	 * @see java.text.Normalizer#normalize(CharSequence, java.text.Normalizer.Form)
	 */
	public static Map<String, String[]> nfc(final Map<String, String[]> original) {
		final HashMap<String, String[]> converted = new HashMap<>(original.size());
		for (final String name : original.keySet()) {
			converted.put(nfc(name), nfc(original.get(name)));
		}
		return converted;
	}
}
