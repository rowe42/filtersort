/*
* Copyright (c): it@M - Dienstleister fuer Informations- und Telekommunikationstechnik
* der Landeshauptstadt Muenchen, 2018
*/
package de.muenchen.testproject.commons.auditing;

import java.util.Objects;

/*
 * This file will NOT be overwritten by Barrakuda.
 * This file was automatically generated by Barrakuda.
 */
/**
 * AuditingServiceConsumer läuft im eigenen Thread und ist zum asynchronen Speichern der Auditing-Daten in der Datenbank zuständig.
 * Created by fabian.holtkoetter on 17.09.15.
 */
public class AuditingServiceConsumer implements Runnable {

    AuditingUserRepository repo;
    EntitySaveQueue queue;

    public AuditingServiceConsumer(AuditingUserRepository repo, EntitySaveQueue queue) {
        this.repo = repo;
        this.queue = queue;
    }

    @Override
    public void run() {
        while (true) { //NOSONAR
            AuditingUserEntity entity = queue.get();
            if (Objects.nonNull(entity))
                repo.save(entity);
        }
    }

}
